// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum PropertyType {
  Commercial
  Residential
}

enum BookingStatusType {
  confirm
  cancled
  pending
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId()
  userId            String  @db.ObjectId()
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId()
  name          String
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Booking {
  id             String            @id @default(auto()) @map("_id") @db.ObjectId()
  isTrash        Boolean           @default(false)
  bookingId      String            @unique
  propertyType   PropertyType      @unique
  floor          String            @unique
  room           String            @unique
  userName       String
  isBooked       BookingStatusType @default(pending)
  userEmail      String
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  ConfirmBooking ConfirmBooking[]
}

model ConfirmBooking {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId()
  isTrash       Boolean           @default(false)
  bookingStatus BookingStatusType @default(confirm)
  bookedRoom    Booking           @relation(fields: [bookingId], references: [id])
  bookingId     String            @unique @db.ObjectId()
  expiresAt     DateTime
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}
